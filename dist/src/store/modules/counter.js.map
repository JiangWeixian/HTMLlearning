{"version":3,"sources":["../../../../src/store/modules/counter.js"],"names":["state","blog","searchContent","projectLists","projectThreads","id","router","src","alt","color","title","time","content","articleLists","articleThreads","markdownData","mutations","SET_SEARCHCONTENT","actions","set_searchcontent","commit","getters","currentArticle","get_articlelists","map","item","style","get_projectlists","get_seachcontent","api","createArticleThread","thread","set","updateArticleList","push"],"mappings":"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","file":"counter.js","sourcesContent":["import Vue from 'vue'\n\nconst state = {\n    blog: 'jiangweixian',\n    searchContent: '',\n    projectLists: ['onepaper', 'plugins', 'ui'],\n    projectThreads: {\n        'onepaper': {\n            id: 'onepaper',\n            router: '/onepaper',\n            src: 'https://raw.githubusercontent.com/JiangWeixian/HTMLlearning/master/README/projects/projects-onepaper.jpg',\n            alt: 'onepaper',\n            color: 'white',\n            title: 'ONEPAPER',\n            time: '2018-10-1',\n            content: '单页Vue页面，UI/动画/组件设计。属于练手项目'\n        },\n        'plugins': {\n            id: 'plugins',\n            router: '/',\n            src: 'https://raw.githubusercontent.com/JiangWeixian/HTMLlearning/master/README/projects/projects-components.jpg',\n            alt: 'plugins',\n            color: 'white',\n            title: 'PLUGINS',\n            time: '2018-03-05',\n            content: '具有实际功能的可用插件'\n        },\n        'ui': {\n            id: 'ui',\n            router: '/',\n            alt: 'ui',\n            color: 'white',\n            src: 'https://raw.githubusercontent.com/JiangWeixian/HTMLlearning/master/README/projects/projects-uirules.jpg',\n            title: 'UI',\n            time: '2018-10-1',\n            content: 'Blog UI 设计规范'\n        }\n    },\n    articleLists: ['build_website_1'],\n    articleThreads: {\n        'build_website_1': {\n            id: 'build_website_1',\n            router: '/articles/build_website_1',\n            src: 'https://raw.githubusercontent.com/JiangWeixian/HTMLlearning/master/README/articles/Github-%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%BB%BA%E7%AB%8B%E8%AF%B4%E6%98%8E/img/build-website-1stpater-homepage.png',\n            alt: 'build_website_1',\n            color: 'black',\n            time: '2018-03-05',\n            content: 'Github个人博客，建站说明第一章。本地化打包Vue项目',\n            title: 'Github个人博客 | 建站说明第一章',\n            markdownData: \"# Github个人博客建立 - 前期准备\\n\" +\n            \">  技术说明；前期准备；\\n\" +\n            \"\\n\" +\n            \"<!-- TOC -->\\n\" +\n            \"\\n\" +\n            \"- [Github个人博客建立 - 前期准备](#github个人博客建立---前期准备)\\n\" +\n            \"    - [序](#序)\\n\" +\n            \"    - [技术要求](#技术要求)\\n\" +\n            \"    - [正文 - 前期准备](#正文---前期准备)\\n\" +\n            \"        - [建立`Vue`工程](#建立vue工程)\\n\" +\n            \"            - [更多细节设置](#更多细节设置)\\n\" +\n            \"\\n\" +\n            \"<!-- /TOC -->\\n\" +\n            \"\\n\" +\n            \"## 序\\n\" +\n            \"\\n\" +\n            \"现在所看到的网站就是寄托于`Github`建立的个人网站。网站所有数据都保存在`Github`上，包括图片、文章等。所未尽善尽美，望海涵。\\n\" +\n            \"\\n\" +\n            \"本章介绍，如何本地打包`Vue`工程。\\n\" +\n            \"\\n\" +\n            \"## 技术要求\\n\" +\n            \"\\n\" +\n            \"* Vue\\n\" +\n            \"* JS\\n\" +\n            \"\\n\" +\n            \"仅仅是如此而已，没有用到其他东西了。\\n\" +\n            \"\\n\" +\n            \"## 正文 - 前期准备\\n\" +\n            \"\\n\" +\n            \"### 建立`Vue`工程\\n\" +\n            \"\\n\" +\n            \"利用`vue-cli`命令初始化`Vue`工程。该教程见[链接](https://cn.vuejs.org/v2/guide/installation.html)。最终建立工程目录如下：\\n\" +\n            \"\\n\" +\n            \"```\\n\" +\n            \".\\n\" +\n            \"├── build\\n\" +\n            \"├── config\\n\" +\n            \"├── index.html\\n\" +\n            \"├── node_modules\\n\" +\n            \"├── package.json\\n\" +\n            \"├── package-lock.json\\n\" +\n            \"├── README.md\\n\" +\n            \"├── src\\n\" +\n            \"└── static\\n\" +\n            \"```\\n\" +\n            \"\\n\" +\n            \"**注意**：初始化工程时候，并不建议添加任何代码检测工具，以及测试工具。\\n\" +\n            \"\\n\" +\n            \"在将工程打包之前，对以下文件做修改：\\n\" +\n            \"\\n\" +\n            \"* `config/index.js`在`build`一项中，修改\\n\" +\n            \"\\n\" +\n            \"```\\n\" +\n            \"assetsPublicPath: '/' 为 assetsPublicPath: './',\\n\" +\n            \"```\\n\" +\n            \"\\n\" +\n            \"**注意：** 意为'./'为根目录，因此在之后代码编写时候要切记这一点。\\n\" +\n            \"\\n\" +\n            \"对于一个新建工程，以上修改已经足够。此时在工程根目录下执行`npm run build`。可以发现根目录中多了一个`dist`文件夹，文件夹中有`index.html`，如果可以在浏览器中显示，则工程打包成功。\\n\" +\n            \"\\n\" +\n            \"#### 更多细节设置\\n\" +\n            \"\\n\" +\n            \"假设并不是新建的`Vue`工程，而在工程中使用了`vue-router`以及使用了本地图片。则需要更多的设置。\\n\" +\n            \"\\n\" +\n            \"* `vue-router` - 如果要打包工程，必须取消`vue-router`的`history mode`。使用`Github`服务器处理路由。\\n\" +\n            \"* 若`vue`组件中使用了本地化文件（包括图片，字体）。则在`build/utils.js`进行修改，如下：\\n\" +\n            \"\\n\" +\n            \"```\\n\" +\n            \"if (options.extract) {\\n\" +\n            \"      return ExtractTextPlugin.extract({\\n\" +\n            \"        use: loaders,\\n\" +\n            \"        fallback: 'vue-style-loader',\\n\" +\n            \"        publicPath: '../../'  \\n\" +\n            \"      })\\n\" +\n            \"    } else {\\n\" +\n            \"      return ['vue-style-loader'].concat(loaders)\\n\" +\n            \"    }\\n\" +\n            \"```\\n\" +\n            \"\\n\" +\n            \"以上。在工程根目录下执行`npm run build`。可以发现根目录中多了一个`dist`文件夹，文件夹中有`index.html`，如果可以在浏览器中显示下图，则工程打包成功。\\n\" +\n            \"\\n\" +\n            \"![首页缩略](https://raw.githubusercontent.com/JiangWeixian/HTMLlearning/master/README/articles/Github-%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%BB%BA%E7%AB%8B%E8%AF%B4%E6%98%8E/img/build-website-1stpater-homepage.png)\\n\" +\n            \"\\n\" +\n            \"**在下一章中，说明如何将项目托管至Github上。**\\n\"\n        }\n    }\n};\n\nconst mutations = {\n    SET_SEARCHCONTENT ( state, { searchContent }) {\n        state.searchContent = searchContent\n    }\n};\n\nconst actions = {\n    set_searchcontent ({ commit }, { searchContent }) {\n        commit('SET_SEARCHCONTENT', { searchContent })\n    }\n};\n\nconst getters = {\n    currentArticle: (state) => (id) => {\n        return state.articleThreads[id]\n    },\n    get_articlelists (state) {\n        return state.articleLists.map((id) => {\n            let item = state.articleThreads[id]\n            item.style = {\n                color: item.color\n            }\n            return item\n        })\n    },\n    get_projectlists (state)  {\n        return state.projectLists.map((id) => {\n            let item = state.projectThreads[id]\n            item.style = {\n                color: item.color\n            }\n            return item\n        })\n    },\n    get_seachcontent ( state ) {\n        return state.searchContent;\n    }\n};\n\nconst api = {\n    createArticleThread (state, id, thread) {\n        Vue.set(state.articleThreads, id, {\n            id: id,\n            markdownData: thread.markdownData\n        })\n    },\n    updateArticleList (state, id) {\n        state.articleLists.push(id)\n    }\n}\n\n\n\nexport default {\n    state,\n    mutations,\n    actions,\n    getters\n}\n"]}